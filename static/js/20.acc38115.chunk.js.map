{"version":3,"file":"static/js/20.acc38115.chunk.js","mappings":"kPAGaA,EAAOC,EAAAA,EAAOC,KAAV,6FAMJC,EAAQF,EAAAA,EAAOG,MAAV,gJASLC,EAAQJ,EAAAA,EAAOK,MAAV,2UAqBLC,EAASN,EAAAA,EAAOO,OAAV,6lBA2BNC,GAAaR,EAAAA,EAAAA,GAAOS,EAAAA,GAAPT,CAAH,wI,oBCIvB,EA/DqB,WACnB,IAAMU,GAAWC,EAAAA,EAAAA,MAwBjB,OACE,UAACZ,EAAD,CAAMa,SAvBa,SAAAC,GACnBA,EAAEC,iBACF,IAAMb,EAAOY,EAAEE,cAEfL,GACEM,EAAAA,EAAAA,IAAS,CACPC,KAAMhB,EAAKiB,SAASD,KAAKE,MACzBC,MAAOnB,EAAKiB,SAASE,MAAMD,MAC3BE,SAAUpB,EAAKiB,SAASG,SAASF,SAGlCG,SACAC,MAAK,SAAAC,GACJC,EAAAA,OAAOC,QAAP,UAAkBF,EAAsBG,KAAKV,KAA7C,aACD,IACAW,OAAM,WACLH,EAAAA,OAAOI,QAAQ,2BAChB,IAEH5B,EAAK6B,OACN,EAG+BC,aAAa,MAA3C,WACE,UAAC7B,EAAD,WAAO,QAEL,SAACE,EAAD,CACE4B,KAAK,OACLf,KAAK,OACLgB,MAAM,yIACNC,YAAY,iBACZC,UAAQ,QAGZ,UAACjC,EAAD,WAAO,SAEL,SAACE,EAAD,CACE4B,KAAK,QACLf,KAAK,QACLgB,MAAM,oLACNC,YAAY,kBACZC,UAAQ,QAGZ,UAACjC,EAAD,WAAO,YAEL,SAACE,EAAD,CACE4B,KAAK,WACLf,KAAK,WACLgB,MAAM,wJACNC,YAAY,qBACZC,UAAQ,QAGZ,SAAC7B,EAAD,CAAQ0B,KAAK,SAAb,SAAsB,cACtB,SAACxB,EAAD,CAAY4B,GAAG,SAAf,SAAwB,yBAG7B,EC9DD,EAJiB,WACf,OAAO,SAAC,EAAD,GACR,C","sources":["components/RegisterForm/RegisterPage.module.jsx","components/RegisterForm/RegisterForm.jsx","Pages/Register/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 12px;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 22px 36px;\n\n  color: #000000;\n  background: #efefef;\n  border-radius: 18px;\n  border: 1px solid #efefef;\n\n  :placeholder {\n    color: #757575;\n  }\n\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    border: 1px solid #000000;\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 600;\n  font-size: 18px;\n\n  margin-top: 24px;\n  padding: 1.063em 1.5em;\n\n  background-color: #000000;\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(250, 187, 24, 0.1);\n  border-radius: 14px;\n\n  cursor: pointer;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #000000;\n    background-color: rgba(250, 187, 24, 0.1);\n    border: 1px solid #000000;\n  }\n`;\n\nexport const LoggedLink = styled(NavLink)`\n  margin-top: 8px;\n  color: #8f8f8f;\n\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    color: #fabb18;\n  }\n`;\n","import { useDispatch } from 'react-redux';\n\nimport { register } from 'redux/auth/operations';\n\nimport { Form, Input, Label, Button, LoggedLink } from './RegisterPage.module';\nimport { Notify } from 'notiflix';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    )\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(`${originalPromiseResult.user.name} welcome!`);\n      })\n      .catch(() => {\n        Notify.failure(\"Sorry, something's wrong\");\n      });\n\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Enter name ...\"\n          required\n        />\n      </Label>\n      <Label>\n        Email\n        <Input\n          type=\"email\"\n          name=\"email\"\n          title=\"Email may contain letters, numbers, an apostrophe, and must be followed by '@' domain name '.' domain suffix. For example Taras@ukr.ua, adrian@gmail.com, JacobM3rcer@hotmail.com\"\n          placeholder=\"Enter email ...\"\n          required\n        />\n      </Label>\n      <Label>\n        Password\n        <Input\n          type=\"password\"\n          name=\"password\"\n          title=\"Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters. For example TgeV23592, 3Greioct.\"\n          placeholder=\"Enter password ...\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Register</Button>\n      <LoggedLink to=\"/login\">Have acount? LogIn</LoggedLink>\n    </Form>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return <RegisterForm />;\n};\n\nexport default Register;\n"],"names":["Form","styled","form","Label","label","Input","input","Button","button","LoggedLink","NavLink","dispatch","useDispatch","onSubmit","e","preventDefault","currentTarget","register","name","elements","value","email","password","unwrap","then","originalPromiseResult","Notify","success","user","catch","failure","reset","autoComplete","type","title","placeholder","required","to"],"sourceRoot":""}